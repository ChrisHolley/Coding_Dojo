 from booksAuthorApp.models import *

books.objects.create(title="C Sharp", desc="It's C Sharp")
books.objects.create(title="Java", desc="it's Java")
books.objects.create(title="Python", desc="It's Python")
books.objects.create(title="PHP", desc="It's PHP")
books.objects.create(title="Ruby", desc="It's Ruby")

//add notes field to authors
python manage.py makemigrations
python manage.py migrate
python manage.py shell
from booksAuthorApp.models import *

//change title="C Sharp" to title="C#"
book1 = books.objects.get(id=1)
title: C Sharp
book1.title = "C#"

//change authors id="4" first_name="William" to firstname="Bill"
author4 = authors.objects.get(id=4)
id: 4 last name: Shakespeare
author4.first_name = "Bill"

//Query: Assign the first author to the first 2 books
book2 = books.objects.get(id=2)
author1 = authors.objects.get(id=1)
author1.books.add(book1)
author1.books.add(book2)

//Query: Assign the second author to the first 3 books

book3 = books.objects.get(id=3)
author2 = authors.objects.get(id=2)
author2.books.add(book1)
author2.books.add(book2)
author2.books.add(book3)

//Query: Assign the third author to the first 4 books
book4 = books.objects.get(id=4)
author3 = authors.objects.get(id=3)
author3.books.add(book1, book2, book3, book4)

//Query: Assign the fourth author to the first 5 books (or in other words, all the books)
author4 = authors.objects.get(id=4)
book5 = books.objects.get(id=5)
author4.books.add(book1, book2, book3, book4, book5)

//Query: Retrieve all the authors for the 3rd book
book3.Authors.all()

//Query: Remove the first author of the 3rd book
author1.books.remove(book3)

//Query: Add the 5th author as one of the authors of the 2nd book
book2.Authors.add(author5)

//Query: Find all the books that the 3rd author is part of
author3.books.all()

//Query: Find all the authors that contributed to the 5th book
book5.Authors.all()


